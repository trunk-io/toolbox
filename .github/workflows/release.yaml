name: Release Horton CLI
on:
  workflow_dispatch:
    inputs:
      release_tag:
        type: string
        description: Tag to create
concurrency: ${{ github.workflow }}

jobs:
  build_linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - name: Set up toolchains
        run: rustup target add x86_64-unknown-linux-gnu

      - name: Build --release
        run: cargo build --release --target x86_64-unknown-linux-gnu
        env:
          HORTON_RELEASE: ${{ github.event.inputs.release_tag }}

      - uses: actions/upload-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu
          path: target/x86_64-unknown-linux-gnu/release/trunk-toolbox

  build_macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable

      - name: Set up toolchains
        run: rustup target add x86_64-apple-darwin aarch64-apple-darwin

      - name: Build --release
        run: cargo build --release --target x86_64-apple-darwin --target aarch64-apple-darwin
        env:
          HORTON_RELEASE: ${{ github.event.inputs.release_tag }}

      - uses: actions/upload-artifact@v3
        with:
          name: x86_64-apple-darwin
          path: target/x86_64-apple-darwin/release/trunk-toolbox

      - uses: actions/upload-artifact@v3
        with:
          name: aarch64-apple-darwin
          path: target/aarch64-apple-darwin/release/trunk-toolbox

  tag_and_release:
    name: Tag and Release [ ${{ github.event.inputs.release_tag }} ]
    runs-on: ubuntu-latest
    needs: [build_linux, build_macos]

    steps:
      - uses: actions/checkout@v3

      - id: download
        uses: actions/download-artifact@v3
        path: artifacts

      - name: Create GH release and upload binary
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # trunk-ignore(actionlint/expression): download-path _is_ defined by actions/download-artifact
        run: |
          gh release create --target ${{ github.ref }} ${{ github.event.inputs.release_tag }} --generate-notes
          gh release upload ${{ github.event.inputs.release_tag }} artifacts
